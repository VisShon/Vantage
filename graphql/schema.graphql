type Event {
	#node
	id: ID! @id
	title: String
	fromDate: Date
	toDate: Date
	details: String
	timestamp: Date
	links:[String]

	#relations
	attendees: [User!]! @relationship(type: "Attendee", direction: OUT, properties: "Attendee")
	sponsors: [Sponsor!]! @relationship(type: "Sponsors", direction: OUT)
	announcements: [Announcement!]! @relationship(type: "Announcements", direction: OUT)
	mailList: [Mail!]! @relationship(type: "MailList", direction: OUT)
	organisers: [User!]! @relationship(type: "Organiser", direction: IN)

}

type User {
	#node
	id: ID! @id
	username: String!
	email: String!
	password: String! @writeonly
	links:[String]

	#relations
	AttendedEvents: [Event!]! @relationship(type: "Attendee", direction: IN, properties: "Attendee")
	OrganisedEvent: [Event!]! @relationship(type: "Organiser", direction: OUT)
}


type Sponsor {
	#node
	id: ID! @id
	image: String!
	URL: String
	amount: Float!
	email: String!
	contact: String

	#relations
	event: Event! @relationship(type: "Sponsors", direction: IN)
}

type Announcement {
	#node
	id: ID! @id
	title: String
	details: String
	timeStamp: Date

	#relations
	event: Event! @relationship(type: "Announcements", direction: IN)
}


type Mail {
	#node
	id: ID! @id
	idject: String
	message: String

	#relations
	event: Event! @relationship(type: "MailList", direction: IN)
}


interface Attendee {
	URL: String
}



extend type User
	@auth(
	rules:[{
		operations: [UPDATE]
		bind:  {id: "$jwt.id"}
	}]
)

extend type Sponsor 
	@auth(
	rules:[{
		operations: [UPDATE,DELETE]
		allow: {
			event:{
				organisers: {id: "$jwt.id"}
			}
		}
	},
	{
		operations: [CREATE]
		isAuthenticated: true
	}]
)


extend type Mail 
	@auth(
	rules:[{
		operations: [UPDATE,DELETE,CONNECT,DISCONNECT]
		allow: {
			event:{
				organisers: {id: "$jwt.id"}
			}
		}
	},
	{
		operations: [CREATE]
		isAuthenticated: true
	}]
)

extend type Event
	@auth(
	rules:[{
		operations: [UPDATE,DELETE,DISCONNECT]
		allow: {
			organisers: {id: "$jwt.id"}
		}
	},
	{
		operations: [CONNECT]
		isAuthenticated:true
	},
	{
		operations: [CREATE]
		isAuthenticated: true
	}]
)